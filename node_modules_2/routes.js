const router = require('express').Router();
const { body } = require('express-validator');
const { register } = require('./controller/registerControllers');
const { login } = require('./controller/loginController');
const { getUser } = require('./controller/getUserController');
const { userdetails } = require('./controller/userdetails')
const { useraddress } = require('./controller/useraddress')
const { usereducation } = require('./controller/usereducation');
const { getCourses } = require('./controller/getCourses');
const { emailsender } = require('./controller/otpsender')
const { verification } = require('./controller/emailverification');
const { userpost } = require('./controller/userpost');


router.post('/emailverification', emailsender)

router.post('/register', [
    body('email', "Invalid email address")
        .notEmpty()
        .escape()
        .trim().isEmail(),
    body('phone', "Invalid contact number").notEmpty().trim().escape().isLength(10).isNumeric(),
    body('password', "The Password must be of minimum 4 characters length").notEmpty().trim().isLength({ min: 4 }),
], register);


router.post('/login', [
    body('email_or_phone', "Invalid email or phone.")
        .notEmpty()
        .escape()
        .trim(),
    body('password', "The Password must be of minimum 4 characters length").notEmpty().trim().isLength({ min: 4 }),
], login);

router.get('/getuser', getUser);


router.put('/userdetails', [
    body('name', "must be of minimum 3 of length")
        .notEmpty()
        .escape()
        .trim().isLength({ min: 3 }),
    body('age', "Invalid age").notEmpty().trim().isNumeric(),
    body('gender', "Invalid gender")
        .notEmpty().trim().escape(),
], userdetails);

router.put('/useraddress', [
    body('address', "must be of minimum 3 of length")
        .notEmpty()
        .escape()
        .trim().isLength({ min: 3 }),

], useraddress);

router.put('/usereducation', [
    body('education', "must be valid key ")
        .notEmpty()
        .escape()
        .trim().isLength({ min: 1 }),

], usereducation);

router.get('/getcourses', getCourses);


router.post('/otpverification', [
    body('otp', 'Invalid OTP')
        .notEmpty()
        .isNumeric()
        .trim()
        .isLength({max:6, min:6})
], verification)


router.post('/userpost',userpost)


module.exports = router;
