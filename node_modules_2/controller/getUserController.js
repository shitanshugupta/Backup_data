const jwt = require('jsonwebtoken');
const conn = require('../db_connection').promise();

exports.getUser = async (req, res, next) => {

    try {

        if (
            !req.headers.authorization ||
            !req.headers.authorization.startsWith('Bearer') ||
            !req.headers.authorization.split(' ')[1]
        ) {
            return res.status(422).json({
                message: "Please provide the token",
            });
        }

        const theToken = req.headers.authorization.split(' ')[1];
        const decoded = jwt.verify(theToken, 'the-super-strong-secrect');

        const [row] = await conn.execute(
            "SELECT * FROM `users` WHERE `id`=?",
            [decoded.id]
        );

        const limit = req.headers.limit ?? 2;
        const page_Number = req.headers.page ?? 1;
        const offset_value = (page_Number - 1) * limit;
        [allusers] = await conn.execute(
            "select * from users LIMIT " + limit + " OFFSET " + offset_value
        )
        const [useraboard] = await conn.execute(
            "SELECT COUNT(*) FROM users WHERE step = 0 AND usertype = 'user' "
        );

        const [userpending] = await conn.execute(
            "SELECT * FROM `users` where id ORDER BY id LIMIT 10"
        );

        delete row[0].password
        delete row[0].token
        let i = 0;
        while (i < allusers.length) {
            delete allusers[i].password
            delete allusers[i].token
            i++
        }
        if (row.length > 0 && row[0].usertype == 'user') {
            return res.json({
                message: row[0]
            });
        } else if (row.length > 0 && row[0].usertype == 'admin') {
            return res.json({
                users_aboard: Object.values(useraboard[0])[0],
                incomplete_users: Object.values(userpending[0])[0],
                all_Users: allusers
            })
        }

        res.json({
            message: "No user found"
        });

    }
    catch (err) {
        next(err);
    }
}

