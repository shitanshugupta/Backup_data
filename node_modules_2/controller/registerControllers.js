const { validationResult } = require('express-validator');
const bcrypt = require('bcryptjs');
const conn = require('../db_connection').promise();

exports.register = async (req, res, next) => {
    const errors = validationResult(req);

    if (!errors.isEmpty()) {
        return res.status(422).json({ errors: errors.array() });
    }

    try {

        const [email] = await conn.execute(
            "SELECT `email` FROM `users` WHERE `email`=?",
            [req.body.email]
        );

        if (email.length > 0) {
            return res.status(201).json({
                message: "The E-mail already in use",
            });
        }

        const [phone] = await conn.execute(
            "SELECT `phone` FROM `users` WHERE `phone`=?",
            [req.body.phone]
        );

        if (phone.length > 0) {
            return res.status(201).json({
                message: "The contact already in use",
            });
        }
        const hashPass = await bcrypt.hash(req.body.password, 12);
        const usertype = "user"
        const [row] = await conn.execute('INSERT INTO `users`(`email`,`phone`,`password`,usertype, step ) VALUES(?,?,?,?,1)', [
            req.body.email,
            req.body.phone,
            hashPass,
            usertype
        ]);

        if (row.affectedRows === 1) {
            return res.status(201).json({
                message: "The user has been successfully inserted.",
            });
        }

    } catch (err) {
        next(err);
    }
}