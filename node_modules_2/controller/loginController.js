const jwt = require('jsonwebtoken');
const bcrypt = require('bcryptjs');
const { validationResult } = require('express-validator');
const conn = require('../db_connection.js').promise();


exports.login = async (req, res, next) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
        return res.status(422).json({ errors: errors.array() });
    }
    try {
        const [row] = await conn.execute(
            "SELECT * FROM `users` WHERE `email`=? OR phone = ?",[
            req.body.email_or_phone, req.body.email_or_phone
            ]);

        const passMatch = await bcrypt.compare(req.body.password, row[0].password);
        if (!passMatch || row.length === 0) {
            return res.status(422).json({
                message: "Incorrect email or password",
            });
        }
        const theToken = jwt.sign({ id: row[0].id, status: row[0].status}, 'the-super-strong-secrect', { expiresIn: '1h' });
        delete row[0].password
        delete row[0].token
        if (row.length > 0) {
            return res.json({
                token: theToken,
                message: row[0]
            })

    }
}
    catch (err) {
        next(err);
    }
}

