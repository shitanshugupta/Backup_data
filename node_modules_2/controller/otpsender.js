const nodemailer = require("nodemailer");
const jwt = require('jsonwebtoken');
const conn = require('../db_connection').promise();

const otpGenerator = require('otp-generator')


exports.emailsender = async (req, res, next) => {

  try {

    if (
      !req.headers.authorization ||
      !req.headers.authorization.startsWith('Bearer') ||
      !req.headers.authorization.split(' ')[1]
    ) {
      return res.status(422).json({
        message: "Please provide the token",
      });
    }

    const theToken = req.headers.authorization.split(' ')[1];
    const decoded = jwt.verify(theToken, 'the-super-strong-secrect');
    const [row] = await conn.execute(
      "SELECT * FROM `users` WHERE `id`=?",
      [decoded.id]
    );
    if (row[0].step == 0 && row[0].status == 'true') {
      return res.json({
        Message: "User already verified."
      })
    } else if (row[0].step == 0 && row[0].status == 'false') {
      const verified = function () {
        let transporter = nodemailer.createTransport({
          service: 'gmail',
          auth: {
            user: 'shikhar@appventurez.com',
            pass: process.env.pass,
          },
        });
        const generatedOTP = otpGenerator.generate(6, { upperCaseAlphabets: false, specialChars: false, lowerCaseAlphabets: false });
        const email = row[0].email
        const timestamp = Math.floor(Date.now()/1000)
        conn.execute('INSERT INTO otp (email, otp, otptime) VALUES(?,?,?)', [
          email, generatedOTP, timestamp
        ]); 

        let info = {
          from: 'shikhar@appventurez.com',
          to: email,
          subject: "Welcome to Registration",
          text: `Here is your following generated otp: ${generatedOTP}`,
        };

        transporter.sendMail(info, function (error, info) {
          if (error) {
            console.log(error)
          } else {
            console.log("Email sent.")
          }
        })

        return res.json({
          Message: "Verification Email Sent."
        });

      }
      verified()
    }


    res.json({
      message: "No user found"
    });

  }
  catch (err) {
    next(err);
  }
}






